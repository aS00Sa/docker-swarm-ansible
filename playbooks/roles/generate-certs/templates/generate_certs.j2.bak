#!/bin/bash

set -e
#PASSWORD=$(openssl rand -base64 32)

IP={{ ansible_default_ipv4['address'] }}
DOMAIN={{ app_domain_name }}
HOST={{ ansible_nodename }}
FQDN={{ ansible_hostname }}.{{ app_domain_name }}
DEFAULT_SSL_DIR=/etc/ssl/{{ app_domain_name }}
WORKING_DIR=/home/{{ ansible_user }}/ssl

if [ ! -d ${DEFAULT_SSL_DIR} ]; then
  mkdir -p ${DEFAULT_SSL_DIR} &> /dev/null
if [ ! -d ${WORKING_DIR} ]; then
  mkdir -p ${WORKING_DIR} &> /dev/null

#echo "Create Certificate Authority";
    #/bin/openssl genrsa -out ca.key 2048
    #/bin/openssl req -x509 -new -nodes -sha256 -days 3650 -subj "/C=RU/ST=RO/L=RND/O=upZERO" -key ca.key -out ca.crt
/usr/bin/cp ca.crt panda.betcity.dev.key panda.betcity.dev.crt ${WORKING_DIR}
/usr/bin/cp ca.crt /usr/share/ca-certificates
/usr/sbin/update-ca-certificates &> /dev/null

#echo "1. Create the Server Private Key";
/bin/openssl genrsa -out ${WORKING_DIR}/$FQDN.key 2048  &> /dev/null

#echo "2. Create Certificate Signing Request Configuration";
echo "[ req ]
prompt = no
default_md = sha256
req_extensions = req_ext
distinguished_name = dn
[ dn ]
C = RU
ST = RO
L = RND
O = upZERO
CN = $FQDN
emailAddress = root@$FQDN
[ req_ext ]
subjectAltName = @alt_names
[ alt_names ]
DNS.1 = $FQDN
DNS.2 = $DOMAIN
DNS.3 = $HOST
IP.1 = $IP
" > $FQDN-csr.conf &> /dev/null

#echo "3. Generate Certificate Signing Request (CSR) Using Server Private Key";
/bin/openssl req -new -key $FQDN.key -out $FQDN.csr -config $FQDN-csr.conf  &> /dev/null

#echo "4. Create a external file";
echo "authorityKeyIdentifier=keyid,issuer
basicConstraints=CA:FALSE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
subjectAltName = @alt_names
[alt_names]
DNS.1 = $FQDN
DNS.2 = $DOMAIN
DNS.3 = $HOST
IP.1 = $IP
" > $FQDN-cert.conf &> /dev/null

#echo "5. Generate SSL certificate With self signed CA";
/bin/openssl x509 -req -in $FQDN.csr -CA panda.betcity.dev.crt -CAkey panda.betcity.dev.key \
 -CAcreateserial -out $FQDN.crt -days 365 -sha256 -extfile $FQDN-cert.conf &> /dev/null

#echo "Verify ip SAN";
#/bin/openssl x509 -in $FQDN.crt -noout -text|grep -A1 "Subject Alternative Name";


#/etc/docker/daemon.json
#
#{
#    "debug": false,
#    "tls": true,
#    "tlsverify": true,
#    "tlscacert": "/etc/docker/certificates/server/ca.pem",
#    "tlscert": "/etc/docker/certificates/server/server-cert.pem",
#    "tlskey": "/etc/docker/certificates/server/server-key.pem",
#    "hosts": ["tcp://0.0.0.0:2376", "unix:///var/run/docker.sock"]
#}